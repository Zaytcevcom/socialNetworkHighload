version: "3.9"
services:

    nginx:
        container_name: hl-nginx
        restart: always
        build:
            context: docker
            dockerfile: development/nginx/Dockerfile
        ports:
            - "80:80"
        volumes:
            - .:/app
        depends_on:
            - php-fpm-1
            - php-fpm-2
            - php-fpm-3
            - websocket
        networks:
            - hl-network

    php-fpm-1:
        container_name: hl-php-fpm-1
        build:
            context: docker
            dockerfile: development/php-fpm/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SERVICE_MESSENGER_URL: ${SERVICE_MESSENGER_URL}
            SENTRY_DSN: ${SENTRY_DSN}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
            DB_REPLICA_HOST: ${DB_REPLICA_HOST}
            DB_REPLICA_USER: ${DB_REPLICA_USER}
            DB_REPLICA_PASSWORD: ${DB_REPLICA_PASSWORD}
            DB_REPLICA_NAME: ${DB_REPLICA_NAME}
            JWT_ENCRYPTION_KEY: /run/secrets/jwt_encryption_key
            JWT_PUBLIC_KEY_PATH: /run/secrets/jwt_public_key
            JWT_PRIVATE_KEY_PATH: /run/secrets/jwt_private_key
        volumes:
            - .:/app
        secrets:
            - jwt_encryption_key
            - jwt_public_key
            - jwt_private_key
        networks:
            - hl-network

    php-fpm-2:
        container_name: hl-php-fpm-2
        build:
            context: docker
            dockerfile: development/php-fpm/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SERVICE_MESSENGER_URL: ${SERVICE_MESSENGER_URL}
            SENTRY_DSN: ${SENTRY_DSN}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
            DB_REPLICA_HOST: ${DB_REPLICA_HOST}
            DB_REPLICA_USER: ${DB_REPLICA_USER}
            DB_REPLICA_PASSWORD: ${DB_REPLICA_PASSWORD}
            DB_REPLICA_NAME: ${DB_REPLICA_NAME}
            JWT_ENCRYPTION_KEY: /run/secrets/jwt_encryption_key
            JWT_PUBLIC_KEY_PATH: /run/secrets/jwt_public_key
            JWT_PRIVATE_KEY_PATH: /run/secrets/jwt_private_key
        volumes:
            - .:/app
        secrets:
            - jwt_encryption_key
            - jwt_public_key
            - jwt_private_key
        networks:
            - hl-network

    php-fpm-3:
        container_name: hl-php-fpm-3
        build:
            context: docker
            dockerfile: development/php-fpm/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SERVICE_MESSENGER_URL: ${SERVICE_MESSENGER_URL}
            SENTRY_DSN: ${SENTRY_DSN}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
            DB_REPLICA_HOST: ${DB_REPLICA_HOST}
            DB_REPLICA_USER: ${DB_REPLICA_USER}
            DB_REPLICA_PASSWORD: ${DB_REPLICA_PASSWORD}
            DB_REPLICA_NAME: ${DB_REPLICA_NAME}
            JWT_ENCRYPTION_KEY: /run/secrets/jwt_encryption_key
            JWT_PUBLIC_KEY_PATH: /run/secrets/jwt_public_key
            JWT_PRIVATE_KEY_PATH: /run/secrets/jwt_private_key
        volumes:
            - .:/app
        secrets:
            - jwt_encryption_key
            - jwt_public_key
            - jwt_private_key
        networks:
            - hl-network

    php-cli:
        container_name: hl-php-cli
        build:
            context: docker
            dockerfile: development/php-cli/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SENTRY_DSN: ${SENTRY_DSN}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
            DB_REPLICA_HOST: ${DB_REPLICA_HOST}
            DB_REPLICA_USER: ${DB_REPLICA_USER}
            DB_REPLICA_PASSWORD: ${DB_REPLICA_PASSWORD}
            DB_REPLICA_NAME: ${DB_REPLICA_NAME}
        volumes:
            - .:/app
        networks:
            - hl-network

    db-source:
        container_name: hl-mysql-source
        restart: always
        build:
            context: docker
            dockerfile: development/replication/semi-sync/source/Dockerfile
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
        volumes:
            - source_data:/var/lib/mysql
        networks:
            - hl-network

    haproxy:
        container_name: hl-haproxy
        build:
            context: docker
            dockerfile: development/haproxy/Dockerfile
        restart: always
        ports:
            - "3306:3306"
            - "8444:8444"
        depends_on:
            - db-replica-1
            - db-replica-2
        networks:
            - hl-network

    db-replica-1:
        container_name: hl-mysql-replica-1
        restart: always
        build:
            context: docker
            dockerfile: development/replication/semi-sync/replica-1/Dockerfile
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
        volumes:
            - replica_1_data:/var/lib/mysql
        depends_on:
            - db-source
        networks:
            - hl-network

    db-replica-2:
        container_name: hl-mysql-replica-2
        restart: always
        build:
            context: docker
            dockerfile: development/replication/semi-sync/replica-2/Dockerfile
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
        volumes:
            - replica_2_data:/var/lib/mysql
        depends_on:
            - db-source
        networks:
            - hl-network

    phpmyadmin:
        container_name: hl-phpmyadmin
        image: phpmyadmin
        environment:
            PMA_ARBITRARY: 1
            UPLOAD_LIMIT: 500M
        ports:
            - "8888:80"
        networks:
            - hl-network

    redis:
        container_name: hl-redis
        image: redis:latest
        restart: always
        entrypoint: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
        networks:
            - hl-network

    rabbitmq:
        container_name: hl-rabbitmq
        image: rabbitmq:management
        restart: always
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
            RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        ports:
            - "15672:15672"
            - "5672:5672"
        networks:
            - hl-network

    websocket:
        container_name: hl-websocket
        restart: always
        build:
            context: docker
            dockerfile: development/node/Dockerfile
        volumes:
            - ./WSServer:/app
        networks:
            - hl-network
        depends_on:
            - rabbitmq

    php-q-refresh-feed-by-user:
        container_name: hl-q-refresh-feed-by-user
        restart: always
        build:
            context: docker
            dockerfile: development/php-cli/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SENTRY_DSN: ${SENTRY_DSN}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
        volumes:
            - .:/app
        networks:
            - hl-network
        depends_on:
            - db-source
            - redis
            - rabbitmq
        command: composer app posts:consumer-refresh-feed-by-user

    php-q-refresh-feed-by-post:
        container_name: hl-q-refresh-feed-by-post
        restart: always
        build:
            context: docker
            dockerfile: development/php-cli/Dockerfile
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            SENTRY_DSN: ${SENTRY_DSN}
            DB_DRIVER: ${DB_DRIVER}
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_CHARSET: ${DB_CHARSET}
        volumes:
            - .:/app
        networks:
            - hl-network
        depends_on:
            - db-source
            - redis
            - rabbitmq
        command: composer app posts:consumer-refresh-feed-by-post

    prometheus:
        container_name: hl-prometheus
        build:
            context: docker
            dockerfile: development/prometheus/Dockerfile
        restart: always
        ports:
            - "9090:9090"
        networks:
            - hl-network

    grafana:
        container_name: hl-grafana
        image: grafana/grafana
        restart: always
        ports:
            - "3000:3000"
        depends_on:
            - prometheus
        environment:
            GF_SECURITY_ADMIN_PASSWORD: admin
        volumes:
            - grafana_data:/var/lib/grafana
        networks:
            - hl-network

    zabbix-server:
        container_name: hl-zabbix-server
        image: zabbix/zabbix-server-mysql:alpine-6.4-latest
        ports:
            - "10051:10051"
        environment:
            ZBX_JAVAGATEWAY: "192.168.1.196"
            DB_SERVER_HOST: "192.168.1.196"
            DB_SERVER_PORT: "3316"
            MYSQL_USER: "zabbix"
            MYSQL_PASSWORD: "zabbix_pwd"
            MYSQL_DATABASE: "zabbix"
            MYSQL_ROOT_PASSWORD: "root_pwd"
        networks:
            - hl-network

    zabbix-web:
        container_name: hl-zabbix-web
        image: zabbix/zabbix-web-nginx-mysql:alpine-6.4-latest
        ports:
            - "8051:8080"
        environment:
            ZBX_SERVER_HOST: "192.168.1.196"
            DB_SERVER_HOST: "192.168.1.196"
            DB_SERVER_PORT: "3316"
            MYSQL_USER: "zabbix"
            MYSQL_PASSWORD: "zabbix_pwd"
            MYSQL_DATABASE: "zabbix"
            MYSQL_ROOT_PASSWORD: "root_pwd"
        networks:
            - hl-network

    zabbix-mysql:
        container_name: hl-zabbix-mysql
        image: mysql:latest
        ports:
            - "3316:3306"
        environment:
            MYSQL_USER: "zabbix"
            MYSQL_PASSWORD: "zabbix_pwd"
            MYSQL_DATABASE: "zabbix"
            MYSQL_ROOT_PASSWORD: "root_pwd"
        networks:
            - hl-network

    zabbix-java:
        container_name: hl-zabbix-java
        image: zabbix/zabbix-java-gateway:alpine-6.4-latest
        networks:
            - hl-network

volumes:
    source_data:
    replica_1_data:
    replica_2_data:
    redis_data:
    rabbitmq_data:
    grafana_data:

networks:
    hl-network:
        driver: bridge

secrets:
    jwt_encryption_key:
        file: ./docker/development/secrets/jwt_encryption_key
    jwt_public_key:
        file: ./docker/development/secrets/jwt_public_key
    jwt_private_key:
        file: ./docker/development/secrets/jwt_private_key
